{
    "docs": [
        {
            "location": "/", 
            "text": "laxar-loader \n\n\n\n\nwebpack loader for LaxarJS\n\n\n\n\n\n   Take a look at the \ndocumentation site\n to browse documentation for all releases of this artifact.\n\n\n\nBundles and validates LaxarJS application artifacts as needed.\n\n\nExample\n\n\nYou could use \nlaxar-loader\n directly, but since it does not need a specific entry module,\nwe pre-rolled the \nartifacts\n and \ndebug-info\n entry points for you and placed them into this\nmodule.\nImport the entry points in your \ninit.js\n:\n\n\nimport\n \nartifacts\n \nfrom\n \nlaxar-loader/artifacts?flow=main\ntheme=rainbows-and-unicorns\n;\n\n\nimport\n \ndebugInfo\n \nfrom\n \nlaxar-loader/debug-info?flow=main\ntheme=rainbows-and-unicorns\n;\n\n\nimport\n \n{\n \ncreate\n \n}\n \nfrom\n \nlaxar\n;\n\n\n\n// const adapters = [ ... ];\n\n\n// const configuration = { ... };\n\n\n// ... later ...\n\n\n\ncreate\n(\n \nadapters\n,\n \nartifacts\n,\n \nconfiguration\n \n)\n\n  \n.\ntooling\n(\n \ndebugInfo\n \n)\n\n  \n.\nbootstrap\n();\n\n\n\n\n\n\nConfiguration\n\n\nPlace a \nlaxar.config.js\n file into your project root directory.\nThis is either the directory where your \nwebpack.config.js\n is, or the directory configured\nwith webpack's \ncontext\n option\n.\n\n\nThe \nlaxar.config.js\n file should look like this:\n\n\nmodule\n.\nexports\n \n=\n \n{\n\n   \npaths\n:\n \n{\n\n      \nflows\n:\n \n./path/to/flows\n,\n \n// default: \n./application/flows\n\n      \nthemes\n:\n \n./path/to/themes\n,\n \n// default: \n./application/themes\n\n      \npages\n:\n \n./path/to/pages\n,\n \n// default: \n./application/pages\n\n      \nlayouts\n:\n \n./path/to/layouts\n,\n \n// default: \n./application/layouts\n\n      \nwidgets\n:\n \n./path/to/widgets\n,\n \n// default: \n./application/widgets\n\n      \ncontrols\n:\n \n./path/to/controls\n,\n \n// default: \n./application/controls\n\n      \ndefault-theme\n:\n \n./path/to/default.theme\n\n   \n}\n\n\n};\n\n\n\n\n\n\nIf no \nlaxar.config.js\n exists, the defaults (above) are used.\n\n\nQuery options (aka the stuff after the \"?\")\n\n\n\n\n\n\n\n\nParameter\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\n?flow\n, \n?flows[]\n\n\nreference(s) to the flow(s) to bundle\n\n\n\n\n\n\n?theme\n, \n?themes[]\n\n\nreference(s) to the theme(s) to bundle\n\n\n\n\n\n\n?page\n, \n?pages[]\n\n\nreference(s) to the page(s) to bundle; can be omitted if pages are reachable from the flow\n\n\n\n\n\n\n?layout\n, \n?layouts[]\n\n\nreference(s) to the layout(s) to bundle; can be omitted if layouts are referenced in bundled pages\n\n\n\n\n\n\n?widget\n, \n?widgets[]\n\n\nreference(s) to the widget(s) to bundle; can be omitted if widgets are referenced in bundled pages\n\n\n\n\n\n\n?control\n, \n?controls[]\n\n\nreference(s) to the control(s) to bundle; can be omitted if controls are referenced in bundled widgets\n\n\n\n\n\n\n\n\nRefer to the \nwebpack documentation\n for details about the loader syntax.\n\n\nThe loaded artifacts listing can then be used to \nbootstrap LaxarJS\n.\n\n\nInteraction with other loaders\n\n\nWhen building the artifacts listing, the loader collects JSON, HTML and CSS files and generates\nrequire calls so they will be present in your webpack bundle. If no loaders are configured for the\nrequired files, \nlaxar-loader\n will use the \njson-loader\n for JSON files,\n\nraw-loader\n for HTML and will write out the resource path for CSS files.\n\n\nThe \ndebug-info\n bundle is wrapped with \nbundle-loader?lazy\n, exporting a function\nthat can be called to asynchronously load debug information if necessary.\n\n\nIf you want to leverage the power of webpack to pre-process these artifacts, just add your loaders to\nthe webpack configuration and they will be used to load the artifacts' assets. There are just a few rules\nyour loaders should obey:\n\n\n\n\nTemplate sources should be valid HTML strings after passing through your loaders.\n\n\nStyle sources should be URLs (\nfile-\n or \nurl-loader\n) or be loaded\n  outside \nLaxar\n via the \nstyle-loader\n.\n\n\n\n\nExample:\n\n\nmodule\n.\nexports\n \n=\n \n{\n\n   \nentry\n:\n \n{\n \ninit\n:\n \n./init.js\n \n},\n\n\n   \noutput\n:\n \n{\n\n      \npath\n:\n \npath\n.\nresolve\n(\n \n__dirname\n,\n \n`\n.\n/\n$\n{\npublicPath\n}\n`\n \n),\n\n      \npublicPath\n,\n\n      \nfilename\n:\n \n[name].bundle.js\n,\n\n      \nchunkFilename\n:\n \n[name].bundle.js\n\n   \n},\n\n\n   \nmodule\n:\n \n{\n\n      \nrules\n:\n \n[\n\n         \n{\n\n            \ntest\n:\n \n/\\.(css|gif|jpe?g|png|ttf|woff2?|svg|eot|otf)(\\?.*)?$/\n,\n\n            \nloader\n:\n \nfile-loader\n,\n\n            \noptions\n:\n \n{\n\n               \nname\n:\n \nassets/[name]-[sha1:hash:hex:6].[ext]\n\n            \n}\n\n         \n},\n\n         \n{\n\n            \ntest\n:\n \n/\\.(gif|jpe?g|png|svg)$/\n,\n\n            \nloader\n:\n \nimg-loader?progressive=true\n\n         \n},\n\n         \n{\n\n            \ntest\n:\n \n/\\.css$/\n,\n\n            \nloader\n:\n \nstyle-loader!css-loader\n\n         \n},\n\n         \n{\n\n            \ntest\n:\n \n/\\/default.theme\\/.*\\.scss$/\n,\n\n            \nloader\n:\n \nsass-loader\n,\n\n            \noptions\n:\n \nrequire\n(\n \nlaxar-uikit/themes/default.theme/sass-options\n \n)\n\n         \n},\n\n         \n{\n\n            \ntest\n:\n \n/\\/rainbows-and-unicorns\\.theme\\/.*\\.scss$/\n,\n\n            \nloader\n:\n \nsass-loader\n,\n\n            \noptions\n:\n \nrequire\n(\n \n./application/themes/rainbows-and-unicorns.theme/sass-options\n \n)\n\n         \n}\n\n      \n]\n\n   \n}\n\n\n};", 
            "title": "README"
        }, 
        {
            "location": "/#laxar-loader", 
            "text": "webpack loader for LaxarJS   \n   Take a look at the  documentation site  to browse documentation for all releases of this artifact.  Bundles and validates LaxarJS application artifacts as needed.", 
            "title": "laxar-loader"
        }, 
        {
            "location": "/#example", 
            "text": "You could use  laxar-loader  directly, but since it does not need a specific entry module,\nwe pre-rolled the  artifacts  and  debug-info  entry points for you and placed them into this\nmodule.\nImport the entry points in your  init.js :  import   artifacts   from   laxar-loader/artifacts?flow=main theme=rainbows-and-unicorns ;  import   debugInfo   from   laxar-loader/debug-info?flow=main theme=rainbows-and-unicorns ;  import   {   create   }   from   laxar ;  // const adapters = [ ... ];  // const configuration = { ... };  // ... later ...  create (   adapters ,   artifacts ,   configuration   ) \n   . tooling (   debugInfo   ) \n   . bootstrap ();", 
            "title": "Example"
        }, 
        {
            "location": "/#configuration", 
            "text": "Place a  laxar.config.js  file into your project root directory.\nThis is either the directory where your  webpack.config.js  is, or the directory configured\nwith webpack's  context  option .  The  laxar.config.js  file should look like this:  module . exports   =   { \n    paths :   { \n       flows :   ./path/to/flows ,   // default:  ./application/flows \n       themes :   ./path/to/themes ,   // default:  ./application/themes \n       pages :   ./path/to/pages ,   // default:  ./application/pages \n       layouts :   ./path/to/layouts ,   // default:  ./application/layouts \n       widgets :   ./path/to/widgets ,   // default:  ./application/widgets \n       controls :   ./path/to/controls ,   // default:  ./application/controls \n       default-theme :   ./path/to/default.theme \n    }  };   If no  laxar.config.js  exists, the defaults (above) are used.", 
            "title": "Configuration"
        }, 
        {
            "location": "/#query-options-aka-the-stuff-after-the", 
            "text": "Parameter  Description      ?flow ,  ?flows[]  reference(s) to the flow(s) to bundle    ?theme ,  ?themes[]  reference(s) to the theme(s) to bundle    ?page ,  ?pages[]  reference(s) to the page(s) to bundle; can be omitted if pages are reachable from the flow    ?layout ,  ?layouts[]  reference(s) to the layout(s) to bundle; can be omitted if layouts are referenced in bundled pages    ?widget ,  ?widgets[]  reference(s) to the widget(s) to bundle; can be omitted if widgets are referenced in bundled pages    ?control ,  ?controls[]  reference(s) to the control(s) to bundle; can be omitted if controls are referenced in bundled widgets     Refer to the  webpack documentation  for details about the loader syntax.  The loaded artifacts listing can then be used to  bootstrap LaxarJS .", 
            "title": "Query options (aka the stuff after the \"?\")"
        }, 
        {
            "location": "/#interaction-with-other-loaders", 
            "text": "When building the artifacts listing, the loader collects JSON, HTML and CSS files and generates\nrequire calls so they will be present in your webpack bundle. If no loaders are configured for the\nrequired files,  laxar-loader  will use the  json-loader  for JSON files, raw-loader  for HTML and will write out the resource path for CSS files.  The  debug-info  bundle is wrapped with  bundle-loader?lazy , exporting a function\nthat can be called to asynchronously load debug information if necessary.  If you want to leverage the power of webpack to pre-process these artifacts, just add your loaders to\nthe webpack configuration and they will be used to load the artifacts' assets. There are just a few rules\nyour loaders should obey:   Template sources should be valid HTML strings after passing through your loaders.  Style sources should be URLs ( file-  or  url-loader ) or be loaded\n  outside  Laxar  via the  style-loader .   Example:  module . exports   =   { \n    entry :   {   init :   ./init.js   }, \n\n    output :   { \n       path :   path . resolve (   __dirname ,   ` . / $ { publicPath } `   ), \n       publicPath , \n       filename :   [name].bundle.js , \n       chunkFilename :   [name].bundle.js \n    }, \n\n    module :   { \n       rules :   [ \n          { \n             test :   /\\.(css|gif|jpe?g|png|ttf|woff2?|svg|eot|otf)(\\?.*)?$/ , \n             loader :   file-loader , \n             options :   { \n                name :   assets/[name]-[sha1:hash:hex:6].[ext] \n             } \n          }, \n          { \n             test :   /\\.(gif|jpe?g|png|svg)$/ , \n             loader :   img-loader?progressive=true \n          }, \n          { \n             test :   /\\.css$/ , \n             loader :   style-loader!css-loader \n          }, \n          { \n             test :   /\\/default.theme\\/.*\\.scss$/ , \n             loader :   sass-loader , \n             options :   require (   laxar-uikit/themes/default.theme/sass-options   ) \n          }, \n          { \n             test :   /\\/rainbows-and-unicorns\\.theme\\/.*\\.scss$/ , \n             loader :   sass-loader , \n             options :   require (   ./application/themes/rainbows-and-unicorns.theme/sass-options   ) \n          } \n       ] \n    }  };", 
            "title": "Interaction with other loaders"
        }, 
        {
            "location": "/CHANGELOG/", 
            "text": "Changelog\n\n\nLast Changes\n\n\nv2.0.0\n\n\nv2.0.0-rc.3\n\n\n\n\n#31\n: fixed dependencies in package.json\n\n\n\n\nv2.0.0-rc.2\n\n\n\n\n#30\n: fixed incorrect context path when resolving artifacts\n\n\n\n\nv2.0.0-rc.1\n\n\n\n\n#29\n: fixed typo that broke artifact loading\n\n\n\n\nv2.0.0-rc.0\n\n\n\n\n#28\n: updated README.md\n\n\n#19\n: singular and plural options (\n?flow=\n vs. \n?flows[]=\n) may now be used interchangeably\n\n\n\n\n#18\n: themes and layouts must now have descriptor \n.json\n files\n\n\n\n\nBREAKING CHANGE\n: see ticket for details\n\n\n\n\n\n\n\n\n#27\n: loading the \ndebug-info\n lazily is now opt-in with the \n?lazy\n parameter\n\n\n\n\nNEW FEATURE: see ticket for details\n\n\n\n\n\n\n\n\nv2.0.0-alpha.3\n\n\n\n\n#25\n: a new entry point \ndebug-info\n has been added\n\n\nNEW FEATURE: see ticket for details\n\n\n\n\n\n\n\n\nv2.0.0-alpha.2\n\n\n\n\n#26\n: bump laxar-tooling version: new default paths\n\n\n\n\nv2.0.0-alpha.1\n\n\n\n\n#24\n: load widgets and controls according to webpack module resolve strategy\n\n\n\n\nv2.0.0-alpha.0\n\n\n\n\n#23\n: allow to omit the \nlaxar.config.js\n file\n\n\n#22\n: upgraded to webpack 2\n\n\n\n\nv0.5.0\n\n\n\n\n#21\n: bump laxar-tooling version: pre-assemble pages at build-time\n\n\n\n\nv0.5.0-alpha.0\n\n\n\n\n\n\n#17\n: artifacts are now validation with JSON schema before they are serialized\n\n\n\n\nBREAKING CHANGE:\n see ticket for details\n\n\n\n\n\n\n\n\n#16\n: updated to \nlaxar-tooling\n v0.5.0\n\n\n\n\nBREAKING CHANGE:\n see ticket for details\n\n\n\n\n\n\n\n\n#15\n: handle webpack aliases ending in \n$\n properly\n\n\n\n\n#12\n: avoid getting module objects for artifact URLs\n\n\n#9\n: the webpack loader is now tested with TravisCI\n\n\n#14\n: avoid use of node's \nfs\n module in favor of webpack's input filesystem\n\n\n#13\n: throw an error when the \nlaxar.config\n can't be resolved, instead of timing out\n\n\n\n\nv0.4.1\n\n\n\n\n#10\n: fix loading of CSS files and \nassetUrls\n\n\n\n\nv0.4.0\n\n\n\n\n#8\n: read \nlaxar.config.js\n for path configuration, update to \nlaxar-tooling\n v0.4.1\n\n\n#7\n: resolve laxar-paths only at the beginning of the path\n\n\n#6\n: don't inject preceding loaders' output into artifact collector\n\n\n#5\n: provide the importable entry point \nlaxar-loader/artifacts\n\n\n\n\nv0.3.0\n\n\n\n\n#4\n: allow loading artifacts directly (instead of starting from the flow)\n\n\n\n\nv0.2.0\n\n\n\n\n#2\n: update to \nlaxar-tooling\n \nv0.3.0\n for artifact asset support\n\n\n#1\n: modified parameters to accept singular and plural variants (e.g. \nflow\n and \nflows[]\n)\n\n\n\n\nv0.1.0\n\n\n\n\ninitial version", 
            "title": "Changelog"
        }, 
        {
            "location": "/CHANGELOG/#changelog", 
            "text": "", 
            "title": "Changelog"
        }, 
        {
            "location": "/CHANGELOG/#last-changes", 
            "text": "", 
            "title": "Last Changes"
        }, 
        {
            "location": "/CHANGELOG/#v200", 
            "text": "", 
            "title": "v2.0.0"
        }, 
        {
            "location": "/CHANGELOG/#v200-rc3", 
            "text": "#31 : fixed dependencies in package.json", 
            "title": "v2.0.0-rc.3"
        }, 
        {
            "location": "/CHANGELOG/#v200-rc2", 
            "text": "#30 : fixed incorrect context path when resolving artifacts", 
            "title": "v2.0.0-rc.2"
        }, 
        {
            "location": "/CHANGELOG/#v200-rc1", 
            "text": "#29 : fixed typo that broke artifact loading", 
            "title": "v2.0.0-rc.1"
        }, 
        {
            "location": "/CHANGELOG/#v200-rc0", 
            "text": "#28 : updated README.md  #19 : singular and plural options ( ?flow=  vs.  ?flows[]= ) may now be used interchangeably   #18 : themes and layouts must now have descriptor  .json  files   BREAKING CHANGE : see ticket for details     #27 : loading the  debug-info  lazily is now opt-in with the  ?lazy  parameter   NEW FEATURE: see ticket for details", 
            "title": "v2.0.0-rc.0"
        }, 
        {
            "location": "/CHANGELOG/#v200-alpha3", 
            "text": "#25 : a new entry point  debug-info  has been added  NEW FEATURE: see ticket for details", 
            "title": "v2.0.0-alpha.3"
        }, 
        {
            "location": "/CHANGELOG/#v200-alpha2", 
            "text": "#26 : bump laxar-tooling version: new default paths", 
            "title": "v2.0.0-alpha.2"
        }, 
        {
            "location": "/CHANGELOG/#v200-alpha1", 
            "text": "#24 : load widgets and controls according to webpack module resolve strategy", 
            "title": "v2.0.0-alpha.1"
        }, 
        {
            "location": "/CHANGELOG/#v200-alpha0", 
            "text": "#23 : allow to omit the  laxar.config.js  file  #22 : upgraded to webpack 2", 
            "title": "v2.0.0-alpha.0"
        }, 
        {
            "location": "/CHANGELOG/#v050", 
            "text": "#21 : bump laxar-tooling version: pre-assemble pages at build-time", 
            "title": "v0.5.0"
        }, 
        {
            "location": "/CHANGELOG/#v050-alpha0", 
            "text": "#17 : artifacts are now validation with JSON schema before they are serialized   BREAKING CHANGE:  see ticket for details     #16 : updated to  laxar-tooling  v0.5.0   BREAKING CHANGE:  see ticket for details     #15 : handle webpack aliases ending in  $  properly   #12 : avoid getting module objects for artifact URLs  #9 : the webpack loader is now tested with TravisCI  #14 : avoid use of node's  fs  module in favor of webpack's input filesystem  #13 : throw an error when the  laxar.config  can't be resolved, instead of timing out", 
            "title": "v0.5.0-alpha.0"
        }, 
        {
            "location": "/CHANGELOG/#v041", 
            "text": "#10 : fix loading of CSS files and  assetUrls", 
            "title": "v0.4.1"
        }, 
        {
            "location": "/CHANGELOG/#v040", 
            "text": "#8 : read  laxar.config.js  for path configuration, update to  laxar-tooling  v0.4.1  #7 : resolve laxar-paths only at the beginning of the path  #6 : don't inject preceding loaders' output into artifact collector  #5 : provide the importable entry point  laxar-loader/artifacts", 
            "title": "v0.4.0"
        }, 
        {
            "location": "/CHANGELOG/#v030", 
            "text": "#4 : allow loading artifacts directly (instead of starting from the flow)", 
            "title": "v0.3.0"
        }, 
        {
            "location": "/CHANGELOG/#v020", 
            "text": "#2 : update to  laxar-tooling   v0.3.0  for artifact asset support  #1 : modified parameters to accept singular and plural variants (e.g.  flow  and  flows[] )", 
            "title": "v0.2.0"
        }, 
        {
            "location": "/CHANGELOG/#v010", 
            "text": "initial version", 
            "title": "v0.1.0"
        }
    ]
}