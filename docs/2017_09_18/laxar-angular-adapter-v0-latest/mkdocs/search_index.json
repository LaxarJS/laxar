{
    "docs": [
        {
            "location": "/", 
            "text": "laxar-angular-adapter \n\n\n\n\nWrite LaxarJS widgets and controls with AngularJS\n\n\n\n\nStarting with LaxarJS 2, AngularJS is no longer supported (and included) by default.\nHowever, this widget-adapter for LaxarJS 2 allows to use widgets written in AngularJS 1.x with LaxarJS 2.\n\n\nTo use the adapter, install it using Bower or npm, and then pass it to \nlaxar.bootstrap\n.\n\n\nNote that AngularJS 1.x is not well suited to multiple LaxarJS application instances sharing a page.\nIf you need this feature, be sure to pass the AngularJS dependencies of all instances as modules to the first \nlaxar.bootstrap\n invocation.\n\n\nAdditionally provided injectable services\n\n\nMost services available as injection for widgets are directly provided by the LaxarJS runtime (see http://laxarjs.org/docs/laxar-v2-latest/manuals/widget_services).\nIn case of this adapter some services are only redefined as AngularJS services to be globally available for other AngularJS services and directives.\nThe following list covers these:\n\n\n\n\naxConfiguration\n\n\naxGlobalEventBus\n\n\naxGlobalLog\n\n\naxGlobalStorage\n\n\naxHeartbeat\n\n\naxTooling\n\n\n\n\naxWidgetServices\n\n\nAdditionally an \naxWidgetServices\n service is available, which can be used by directives to gain access to services that are only available in the context of a specific widget, such as \naxFeatures\n, \naxI18n\n or the decorated log for widgets (\naxLog\n).\nThe \naxWidgetServices\n is a function, that must be called with scope of the directive and it returns the map of services that are available for the widget being the same as or a parent of the directive scope in the scope hierarchy.\nAs a consequence an error is thrown if this service is used with a scope not being (a child of) a widget scope.\n\n\nExample:\n\n\nmyModule\n.\ndirective\n(\n \nmyDirective\n,\n \n[\n \naxWidgetServices\n,\n \naxWidgetServices\n \n=\n \n{\n\n   \nreturn\n \n{\n\n      \nlink\n(\n \nscope\n \n)\n \n{\n\n         \nconst\n \nwidgetServices\n \n=\n \naxWidgetServices\n(\n \nscope\n \n);\n\n         \nwidgetServices\n.\naxLog\n.\ninfo\n(\n \nHere we are!\n \n);\n\n      \n}\n\n   \n}\n\n\n}\n \n]\n \n);\n\n\n\n\n\n\n$scope\n\n\nAs it is always the case for controllers, the \n$scope\n the controller is bound to can be injected.\nFor AngularJS widgets this is exactly the same as the \naxContext\n injection.\nAll widget scopes are child of one specific parent scope and don't copy the hierarchy or placement of widgets within a page, i.e. all widget scopes are siblings of each other.", 
            "title": "README"
        }, 
        {
            "location": "/#laxar-angular-adapter", 
            "text": "Write LaxarJS widgets and controls with AngularJS   Starting with LaxarJS 2, AngularJS is no longer supported (and included) by default.\nHowever, this widget-adapter for LaxarJS 2 allows to use widgets written in AngularJS 1.x with LaxarJS 2.  To use the adapter, install it using Bower or npm, and then pass it to  laxar.bootstrap .  Note that AngularJS 1.x is not well suited to multiple LaxarJS application instances sharing a page.\nIf you need this feature, be sure to pass the AngularJS dependencies of all instances as modules to the first  laxar.bootstrap  invocation.", 
            "title": "laxar-angular-adapter"
        }, 
        {
            "location": "/#additionally-provided-injectable-services", 
            "text": "Most services available as injection for widgets are directly provided by the LaxarJS runtime (see http://laxarjs.org/docs/laxar-v2-latest/manuals/widget_services).\nIn case of this adapter some services are only redefined as AngularJS services to be globally available for other AngularJS services and directives.\nThe following list covers these:   axConfiguration  axGlobalEventBus  axGlobalLog  axGlobalStorage  axHeartbeat  axTooling", 
            "title": "Additionally provided injectable services"
        }, 
        {
            "location": "/#axwidgetservices", 
            "text": "Additionally an  axWidgetServices  service is available, which can be used by directives to gain access to services that are only available in the context of a specific widget, such as  axFeatures ,  axI18n  or the decorated log for widgets ( axLog ).\nThe  axWidgetServices  is a function, that must be called with scope of the directive and it returns the map of services that are available for the widget being the same as or a parent of the directive scope in the scope hierarchy.\nAs a consequence an error is thrown if this service is used with a scope not being (a child of) a widget scope.  Example:  myModule . directive (   myDirective ,   [   axWidgetServices ,   axWidgetServices   =   { \n    return   { \n       link (   scope   )   { \n          const   widgetServices   =   axWidgetServices (   scope   ); \n          widgetServices . axLog . info (   Here we are!   ); \n       } \n    }  }   ]   );", 
            "title": "axWidgetServices"
        }, 
        {
            "location": "/#scope", 
            "text": "As it is always the case for controllers, the  $scope  the controller is bound to can be injected.\nFor AngularJS widgets this is exactly the same as the  axContext  injection.\nAll widget scopes are child of one specific parent scope and don't copy the hierarchy or placement of widgets within a page, i.e. all widget scopes are siblings of each other.", 
            "title": "$scope"
        }, 
        {
            "location": "/CHANGELOG/", 
            "text": "Changelog\n\n\nLast Changes\n\n\nv0.3.0\n\n\n\n\n\n\n#7\n: changed the \naxVisibilityService\n used by directives to use \naxWidgetServices\n\n\n\n\nBREAKING CHANGE:\n see ticket for details\n\n\n\n\n\n\n\n\n#29\n: Removed redundant technology field\n\n\n\n\n#28\n: Fixed tooling api access\n\n\n#24\n: adjusted to adapter API changes (laxar#358)\n\n\n#23\n: fixed testability and multi-instance operation\n\n\n#22\n: removed AngularJS specific \naxI18n\n injection in favor of widget-services version\n\n\n#21\n: fixed bower.json \nmain\n entry\n\n\n#20\n: patched window.Promise to integrate with $q\n\n\n#19\n: removed applyViewChanges in favor of a heartbeat listener\n\n\n#18\n: services: share the same object for $scope and axContext injections\n\n\n#16\n: services: provided access to widget specific services\n\n\n#17\n: project: turned framework dependencies into peer-dependencies\n\n\n#5\n: services: added AngularJS injections for widget services\n\n\n\n\n#14\n: directives: removed layout directive\n        + \nBREAKING CHANGE:\n see ticket for details\n\n\n\n\n\n\n#13\n: eslint: use shared configuration\n\n\n\n\n#12\n: additional eslint restrictions\n\n\n#11\n: added dist-target for UMD-library\n\n\n#10\n: Upgraded build/test dependencies (grunt v1)\n\n\n#6\n: LaxarJS v2 Compatibility\n        + \nBREAKING CHANGE:\n see ticket for details\n\n\n\n\nv0.2.0\n\n\n\n\n#3\n: AngularJS: Moved all angular bootstrapping to this adapter\n\n\n#8\n: moved AngularJS exception handler to this adapter\n\n\n#6\n: visibility service: moved from core to this adapter\n\n\n#2\n: profiling: moved from core to this adapter\n\n\n#1\n: directives: moved from core to this adapter\n\n\n\n\nv0.1.0", 
            "title": "Changelog"
        }, 
        {
            "location": "/CHANGELOG/#changelog", 
            "text": "", 
            "title": "Changelog"
        }, 
        {
            "location": "/CHANGELOG/#last-changes", 
            "text": "", 
            "title": "Last Changes"
        }, 
        {
            "location": "/CHANGELOG/#v030", 
            "text": "#7 : changed the  axVisibilityService  used by directives to use  axWidgetServices   BREAKING CHANGE:  see ticket for details     #29 : Removed redundant technology field   #28 : Fixed tooling api access  #24 : adjusted to adapter API changes (laxar#358)  #23 : fixed testability and multi-instance operation  #22 : removed AngularJS specific  axI18n  injection in favor of widget-services version  #21 : fixed bower.json  main  entry  #20 : patched window.Promise to integrate with $q  #19 : removed applyViewChanges in favor of a heartbeat listener  #18 : services: share the same object for $scope and axContext injections  #16 : services: provided access to widget specific services  #17 : project: turned framework dependencies into peer-dependencies  #5 : services: added AngularJS injections for widget services   #14 : directives: removed layout directive\n        +  BREAKING CHANGE:  see ticket for details    #13 : eslint: use shared configuration   #12 : additional eslint restrictions  #11 : added dist-target for UMD-library  #10 : Upgraded build/test dependencies (grunt v1)  #6 : LaxarJS v2 Compatibility\n        +  BREAKING CHANGE:  see ticket for details", 
            "title": "v0.3.0"
        }, 
        {
            "location": "/CHANGELOG/#v020", 
            "text": "#3 : AngularJS: Moved all angular bootstrapping to this adapter  #8 : moved AngularJS exception handler to this adapter  #6 : visibility service: moved from core to this adapter  #2 : profiling: moved from core to this adapter  #1 : directives: moved from core to this adapter", 
            "title": "v0.2.0"
        }, 
        {
            "location": "/CHANGELOG/#v010", 
            "text": "", 
            "title": "v0.1.0"
        }
    ]
}